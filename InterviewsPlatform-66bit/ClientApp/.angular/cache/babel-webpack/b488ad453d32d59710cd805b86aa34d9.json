{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jexin/Desktop/projects/InterviewsPlatform-66bit/InterviewsPlatform-66bit/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HubConnectionBuilder } from \"@aspnet/signalr\";\nimport * as i0 from \"@angular/core\";\nexport class SignalrConnectorService {\n  constructor() {\n    this._connected = false;\n    this.connection = new HubConnectionBuilder().withUrl(new URL(\"https://localhost:7070/interviews/hub?id=fuck\")).build();\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  start() {\n    if (!this._connected) {\n      return this.connection.start().catch(console.error).then(() => {\n        this._connected = true;\n      });\n    }\n\n    return new Promise(() => {});\n  }\n\n  invoke(methodName, ...args) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.connection.invoke(methodName, ...args);\n    })();\n  }\n\n  ngOnDestroy() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2._connected = false;\n      yield _this2.connection.stop();\n    })();\n  }\n\n}\n\nSignalrConnectorService.ɵfac = function SignalrConnectorService_Factory(t) {\n  return new (t || SignalrConnectorService)();\n};\n\nSignalrConnectorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SignalrConnectorService,\n  factory: SignalrConnectorService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"sources":["C:/Users/jexin/Desktop/projects/InterviewsPlatform-66bit/InterviewsPlatform-66bit/ClientApp/src/app/interview/services/signalrConnector.service.ts"],"names":["HubConnectionBuilder","i0","SignalrConnectorService","constructor","_connected","connection","withUrl","URL","build","connected","start","catch","console","error","then","Promise","invoke","methodName","args","ngOnDestroy","stop","ɵfac","SignalrConnectorService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,oBAAT,QAAqC,iBAArC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,uBAAN,CAA8B;AACjCC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,UAAL,GAAkB,IAAIL,oBAAJ,GACbM,OADa,CACL,IAAIC,GAAJ,CAAQ,+CAAR,CADK,EAEbC,KAFa,EAAlB;AAGH;;AACY,MAATC,SAAS,GAAG;AACZ,WAAO,KAAKL,UAAZ;AACH;;AACDM,EAAAA,KAAK,GAAG;AACJ,QAAI,CAAC,KAAKN,UAAV,EAAsB;AAClB,aAAO,KAAKC,UAAL,CAAgBK,KAAhB,GAAwBC,KAAxB,CAA8BC,OAAO,CAACC,KAAtC,EAA6CC,IAA7C,CAAkD,MAAM;AAC3D,aAAKV,UAAL,GAAkB,IAAlB;AACH,OAFM,CAAP;AAGH;;AACD,WAAO,IAAIW,OAAJ,CAAY,MAAM,CAAG,CAArB,CAAP;AACH;;AACKC,EAAAA,MAAM,CAACC,UAAD,EAAa,GAAGC,IAAhB,EAAsB;AAAA;;AAAA;AAC9B,aAAO,KAAI,CAACb,UAAL,CAAgBW,MAAhB,CAAuBC,UAAvB,EAAmC,GAAGC,IAAtC,CAAP;AAD8B;AAEjC;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,MAAA,MAAI,CAACf,UAAL,GAAkB,KAAlB;AACA,YAAM,MAAI,CAACC,UAAL,CAAgBe,IAAhB,EAAN;AAFgB;AAGnB;;AAxBgC;;AA0BrClB,uBAAuB,CAACmB,IAAxB,GAA+B,SAASC,+BAAT,CAAyCC,CAAzC,EAA4C;AAAE,SAAO,KAAKA,CAAC,IAAIrB,uBAAV,GAAP;AAA8C,CAA3H;;AACAA,uBAAuB,CAACsB,KAAxB,GAAgC,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,uBAAT;AAAkCyB,EAAAA,OAAO,EAAEzB,uBAAuB,CAACmB,IAAnE;AAAyEO,EAAAA,UAAU,EAAE;AAArF,CAAtB,CAA9C","sourcesContent":["import { HubConnectionBuilder } from \"@aspnet/signalr\";\r\nimport * as i0 from \"@angular/core\";\r\nexport class SignalrConnectorService {\r\n    constructor() {\r\n        this._connected = false;\r\n        this.connection = new HubConnectionBuilder()\r\n            .withUrl(new URL(\"https://localhost:7070/interviews/hub?id=fuck\"))\r\n            .build();\r\n    }\r\n    get connected() {\r\n        return this._connected;\r\n    }\r\n    start() {\r\n        if (!this._connected) {\r\n            return this.connection.start().catch(console.error).then(() => {\r\n                this._connected = true;\r\n            });\r\n        }\r\n        return new Promise(() => { });\r\n    }\r\n    async invoke(methodName, ...args) {\r\n        return this.connection.invoke(methodName, ...args);\r\n    }\r\n    async ngOnDestroy() {\r\n        this._connected = false;\r\n        await this.connection.stop();\r\n    }\r\n}\r\nSignalrConnectorService.ɵfac = function SignalrConnectorService_Factory(t) { return new (t || SignalrConnectorService)(); };\r\nSignalrConnectorService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: SignalrConnectorService, factory: SignalrConnectorService.ɵfac, providedIn: \"root\" });\r\n"]},"metadata":{},"sourceType":"module"}