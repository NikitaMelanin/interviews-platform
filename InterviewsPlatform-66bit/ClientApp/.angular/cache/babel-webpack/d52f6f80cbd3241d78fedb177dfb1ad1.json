{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jexin/Desktop/projects/InterviewsPlatform-66bit/InterviewsPlatform-66bit/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HubConnectionBuilder } from \"@aspnet/signalr\";\nimport * as i0 from \"@angular/core\";\nexport class InterviewComponent {\n  constructor(baseUrl) {\n    var _this = this;\n\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        this.video = stream;\n      });\n    }\n\n    this.connection = new HubConnectionBuilder().withUrl(\"/interviews/hub\").build();\n\n    if (this.video) {\n      let recorder = new MediaRecorder(this.video);\n\n      recorder.ondataavailable = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (ev) {\n          yield _this.connection.invoke(\"AddBytes\", InterviewComponent.ArrayBufferToBase64(yield ev.data.arrayBuffer()));\n          console.log(1);\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      this.connection.start();\n      recorder.start(1000);\n    }\n\n    window.onbeforeunload = /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this.connection.stop();\n    });\n  }\n\n  StartVideoRecording() {\n    return _asyncToGenerator(function* () {})();\n  }\n\n  static ArrayBufferToBase64(buffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n\n    return window.btoa(binary);\n  }\n\n}\n\nInterviewComponent.ɵfac = function InterviewComponent_Factory(t) {\n  return new (t || InterviewComponent)(i0.ɵɵdirectiveInject('BASE_URL'));\n};\n\nInterviewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InterviewComponent,\n  selectors: [[\"app-interview\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"text-center\"], [\"id\", \"container\"], [\"autoplay\", \"\", \"id\", \"videoElement\", 3, \"srcObject\"]],\n  template: function InterviewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"video\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"srcObject\", ctx.video);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/jexin/Desktop/projects/InterviewsPlatform-66bit/InterviewsPlatform-66bit/ClientApp/src/app/interview/interview.component.ts"],"names":["HubConnectionBuilder","i0","InterviewComponent","constructor","baseUrl","navigator","mediaDevices","getUserMedia","video","audio","then","stream","connection","withUrl","build","recorder","MediaRecorder","ondataavailable","ev","invoke","ArrayBufferToBase64","data","arrayBuffer","console","log","start","window","onbeforeunload","stop","StartVideoRecording","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","btoa","ɵfac","InterviewComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","InterviewComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","encapsulation"],"mappings":"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","sourcesContent":["import { HubConnectionBuilder } from \"@aspnet/signalr\";\r\nimport * as i0 from \"@angular/core\";\r\nexport class InterviewComponent {\r\n    constructor(baseUrl) {\r\n        if (navigator.mediaDevices.getUserMedia) {\r\n            navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n                .then((stream) => {\r\n                this.video = stream;\r\n            });\r\n        }\r\n        this.connection = new HubConnectionBuilder()\r\n            .withUrl(\"/interviews/hub\")\r\n            .build();\r\n        if (this.video) {\r\n            let recorder = new MediaRecorder(this.video);\r\n            recorder.ondataavailable = async (ev) => {\r\n                await this.connection.invoke(\"AddBytes\", InterviewComponent.ArrayBufferToBase64(await ev.data.arrayBuffer()));\r\n                console.log(1);\r\n            };\r\n            this.connection.start();\r\n            recorder.start(1000);\r\n        }\r\n        window.onbeforeunload = async () => {\r\n            await this.connection.stop();\r\n        };\r\n    }\r\n    async StartVideoRecording() {\r\n    }\r\n    static ArrayBufferToBase64(buffer) {\r\n        let binary = '';\r\n        const bytes = new Uint8Array(buffer);\r\n        const len = bytes.byteLength;\r\n        for (let i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return window.btoa(binary);\r\n    }\r\n}\r\nInterviewComponent.ɵfac = function InterviewComponent_Factory(t) { return new (t || InterviewComponent)(i0.ɵɵdirectiveInject('BASE_URL')); };\r\nInterviewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InterviewComponent, selectors: [[\"app-interview\"]], decls: 3, vars: 1, consts: [[1, \"text-center\"], [\"id\", \"container\"], [\"autoplay\", \"\", \"id\", \"videoElement\", 3, \"srcObject\"]], template: function InterviewComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵelementStart(1, \"div\", 1);\r\n        i0.ɵɵelement(2, \"video\", 2);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"srcObject\", ctx.video);\r\n    } }, encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}